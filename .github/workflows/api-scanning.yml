name: CI - DAST API scanning
on:
  push:
    branches: [ step5 ]
    paths:
     - 'rest-api-goat/Dockerfile'
     - 'rest-api-goat/.dockerignore'
     - 'rest-api-goat/zap-api-scan.sh'
     - 'rest-api-goat/docker-compose.yaml'
     - '.github/workflows/api-scanning.yml'
  pull_request:
    branches: [ step5 ]
    paths:
     - 'rest-api-goat/Dockerfile'
     - 'rest-api-goat/.dockerignore'
     - 'rest-api-goat/zap-api-scan.sh'
     - 'rest-api-goat/docker-compose.yaml'
     - '.github/workflows/api-scanning.yml'

env:
  ## Sets environment variables
  ENV: "dev"
  DELETE_FLAG: "true"
  API_TARGET: "http://web:5000"
  API_REPORT_FILE: "api_report.json"
  CONTAINER_NAME: "zap2docker_scan"
  APP_DIR: "rest-api-goat"

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
    # Checks-out our repository
    - name: Checkout
      uses: actions/checkout@v2

    # Cleanup
    - name: Clean
      run: |-
        pushd "${{env.APP_DIR}}"
        if [ "${{env.DELETE_FLAG}}" == "true" ]
        then
          docker-compose rm -f web
          docker-compose rm -f zap2docker
        fi
        popd

    # Run REST API Goat
    - name: RunAPI
      run: |-
        pushd "${{env.APP_DIR}}"
        docker-compose up -d web
        docker-compose logs web
        popd
        
    # Launch API scan
    - name: Scanning
      env:
        GOAT_API_TOKEN: ${{ secrets.GOAT_API_TOKEN }}
      run: |-
        pushd "${{env.APP_DIR}}"
        docker-compose run --name "${{env.CONTAINER_NAME}}" -d -e ENV="${{env.ENV}}" -e REPORT_FILE="${{env.API_REPORT_FILE}}" -e TARGET="${{env.API_TARGET}}" zap2docker
        docker logs -f "${{env.CONTAINER_NAME}}"
        popd
