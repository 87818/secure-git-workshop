name: CI pipeline - demo

on:
  push:
    branches:
      - ci-demo
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
     - name: Install requirements
       run: apt -y install git make python3 curl jq bat
     - name: Check docker
       run: docker info || exit
  start:
    name: Start
    needs: setup
    runs-on: ubuntu-latest
    steps:
     - name: Clone repo
       uses: actions/checkout@v2
       with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
     - name: Install requirements
       run: make verify || make setup
     - name: Define metadata for commits
       run: |
        git config user.name "Your Name"
        git config user.email "your@mail.com"

  step1:
    name: Step1
    runs-on: ubuntu-latest
    needs: [setup, start]
    steps:
     - name: Add a line with config.ini in gitignore
       run: |
        sed -i -- 's/#config.ini/config.ini/g' .gitignore
        #echo config.ini >> .gitignore
     - name: Create and fill out config.ini file locally
       run: cp -v samples/config.ini.sample config.ini
     - name: Ensure that the private config.ini is ignored
       run: |
        grep -r --color config.ini .gitignore | grep -v "#"
        git check-ignore -v config.ini

  step2:
    name: Step2
    runs-on: ubuntu-latest
    needs: [setup, start, step1]
    steps:
     - name: ...
       run: echo "..."
  
  step3:
    name: Step3
    runs-on: ubuntu-latest
    needs: [setup, start, step1, step2]
    steps:
     - name: ...
       run: echo "..."

  step4:
    name: Step4
    runs-on: ubuntu-latest
    needs: [setup, start, step1, step2, step3]
    steps:
      - name: sonarcloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  step5:
    name: Step5
    runs-on: ubuntu-latest
    needs: [setup, start, step1, step2, step3, step4]
    steps:
   - name: ...
     run: echo "..."
  
  step6:
    name: Step6
    runs-on: ubuntu-latest
    needs: [setup, start, step1, step2, step3, step4, step5]
    steps:
   - name: ...
     run: echo "..."
  
  step7:
    name: Step7
    runs-on: ubuntu-latest
    needs: [setup, start, step1, step2, step3, step4, step5, step6]
    steps:
   - name: ...
     run: echo "..."
 
  step8:
    name: Step8
    runs-on: ubuntu-latest
    needs: [setup, start, step1, step2, step3, step4, step5, step6, step7]
    steps:
   - name: ...
     run: echo "..."
  
  step9:
    name: Step9
    runs-on: ubuntu-latest
    needs: [setup, start, step1, step2, step3, step4, step5, step6, step7, step8]
    steps:
   - name: ...
     run: echo "..."
